@page "/login"
@using SpeedwayTyperApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation
@inject CustomAuthStateProvider AuthStateProvider

<div class="login-box">
    <div class="login-container">
        <h3>Zaloguj</h3>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <RadzenTextBox @bind-Value="loginModel.Username" Placeholder="Nazwa użytkownika" class="form-control" />
            </div>
            <div class="form-group">
                <RadzenPassword @bind-Value="loginModel.Password" Placeholder="Hasło" class="form-control" />
            </div>
            <RadzenButton ButtonType="ButtonType.Submit" Text="Zaloguj" class="btn" />
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/Auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            // Store the token and mark user as authenticated
            AuthStateProvider.MarkUserAsAuthenticated(loginModel.Username);
            Navigation.NavigateTo("/");
        }
        else
        {
            // Handle error (show message to user)
        }
    }

    public class LoginResult
    {
        public string Token { get; set; }
    }
}